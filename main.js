(()=>{"use strict";var __webpack_modules__={13:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval("{\n;// ./src/constants.js\nconst BOARD_SIZE = 10; // 10x10 grid\nconst SHIPS = {\n  Carrier: 5,\n  Battleship: 4,\n  Cruiser: 3,\n  Submarine: 3,\n  Destroyer: 2,\n};\nconst SHIP_NAMES = Object.keys(SHIPS);\nconst SHIP_LENGTHS = Object.values(SHIPS);\n;// ./src/modules/ship.js\n/**\n * Represents a ship in the Battleship game.\n * Tracks ship size and damage to determine if it's been sunk.\n * \n * @class Ship\n * @param {number} length - The size/length of the ship (number of cells it occupies). Minimum value is 1.\n * @param {number} [hitCount=0] - Initial number of hits (used for testing or loading saved games).\n * \n * @property {number} length - The ship's size (1-5 cells). Values < 1 are clamped to 1.\n * @property {number} hitCount - Current number of successful hits on this ship.\n * \n * @example\n * const carrier = new Ship(5);  // Creates a 5-cell ship (Carrier)\n * carrier.hit();                // Increment hits\n * carrier.isSunk();             // Returns false (1/5 hits)\n * \n * @example\n * const destroyer = new Ship(2);\n * destroyer.hit();\n * destroyer.hit();\n * destroyer.isSunk();           // Returns true (2/2 hits - sunk)\n */\nclass Ship {\n  constructor(length, hitCount = 0) {\n    if (length < 1) {\n      this.length = 1;\n    } else {\n      this.length = length;\n    }\n    this.hitCount = hitCount;\n  }\n\n  /**\n   * Registers a hit on the ship by incrementing the hit counter.\n   * \n   * @returns {void}\n   */\n  hit() {\n    this.hitCount++;\n  }\n\n  /**\n   * Checks if the ship has been sunk.\n   * \n   * @returns {boolean} True if the ship is completely destroyed, false if it still has remaining health.\n   */\n  isSunk() {\n    return this.hitCount === this.length;\n  }\n}\n\n/* harmony default export */ const ship = (Ship);\n;// ./src/modules/helperFunctions.js\n\n\n/************************************************************/\n/* Validation Functions */\n/************************************************************/\n\n/**\n * Checks if coordinates are within the board boundaries.\n * @param {number} x - Row coordinate\n * @param {number} y - Column coordinate\n * @returns {boolean} True if valid, false if out of bounds\n */\nfunction isCoordValid(x, y) {\n  if (x < 0 || x >= BOARD_SIZE || y < 0 || y >= BOARD_SIZE) {\n    return false;\n  }\n  return true;\n}\n\n/************************************************************/\n/* DOM Manipulation - General */\n/************************************************************/\n\n/**\n * Removes all child elements from a parent element.\n * @param {HTMLElement} elem - Parent element to clear\n */\nfunction removeChildren(elem) {\n  while (elem && elem.firstChild) {\n    elem.removeChild(elem.firstChild);\n  }\n}\n\n/**\n * Hides an element by adding 'hidden-elem' class.\n * @param {HTMLElement} elem - Element to hide\n */\nfunction hideElem(elem) {\n  if (elem) {\n    elem.classList.add('hidden-elem');\n  }\n}\n\n/**\n * Shows a previously hidden element by removing 'hidden-elem' class.\n * @param {HTMLElement} elem - Element to show\n */\nfunction showElem(elem) {\n  if (elem) {\n    elem.classList.remove('hidden-elem');\n  }\n}\n\n/************************************************************/\n/* Board Rendering */\n/************************************************************/\n\n/**\n * Creates and renders a 10x10 grid of empty cells.\n * @param {HTMLElement} boardElem - Board container element\n */\nfunction renderEmptyBoard(boardElem) {\n  if (boardElem) {\n    const cellsCount = 100;\n    for (let i = 0; i < cellsCount; i++) {\n      const newCellElement = document.createElement('div');\n      newCellElement.setAttribute('index', i);\n      newCellElement.classList.add('cell');\n      boardElem.appendChild(newCellElement);\n    }\n  }\n}\n\n/************************************************************/\n/* Fleet Panel - Ship Cards */\n/************************************************************/\n\n/**\n * Generates and adds all ship cards to the fleet panel.\n * Creates ship-box elements with title, size, and visual cells.\n * @param {HTMLElement} shipsContainerElem - Fleet container element\n */\nfunction addSideShipsToDOM(shipsContainerElem) {\n  if (!shipsContainerElem) return;\n  \n  for (let i = 0; i < SHIP_LENGTHS.length; i++) {\n    const size = SHIP_LENGTHS[i];\n    const title = SHIP_NAMES[i];\n    \n    // Create ship-box container\n    const shipBox = document.createElement('div');\n    shipBox.classList.add('ship-box');\n    \n    // Create ship-info section (title + size)\n    const shipInfo = document.createElement('div');\n    shipInfo.classList.add('ship-info');\n    \n    const shipTitle = document.createElement('div');\n    shipTitle.classList.add('ship-title');\n    shipTitle.textContent = title;\n    \n    const shipSize = document.createElement('div');\n    shipSize.classList.add('ship-size');\n    shipSize.textContent = size;\n    \n    shipInfo.appendChild(shipTitle);\n    shipInfo.appendChild(shipSize);\n    \n    // Create ship-elem section (visual cells)\n    const shipElem = document.createElement('div');\n    shipElem.classList.add('ship-elem');\n    \n    // Add ship cells\n    for (let j = 0; j < size; j++) {\n      const cell = document.createElement('div');\n      cell.classList.add('side-ship-cell');\n      shipElem.appendChild(cell);\n    }\n    \n    // Assemble ship-box\n    shipBox.appendChild(shipInfo);\n    shipBox.appendChild(shipElem);\n    \n    shipsContainerElem.appendChild(shipBox);\n  }\n}\n\n/**\n * Resets all ships in fleet to unplaced state.\n * Removes 'placed' class from all ship cards.\n * @param {HTMLElement} shipsContainerElem - Fleet container element\n */\nfunction showSideShips(shipsContainerElem) {\n  if (shipsContainerElem) {\n    for (const shipElem of shipsContainerElem.children) {\n      shipElem.classList.remove('placed');\n    }\n  }\n}\n\n/************************************************************/\n/* Cell State Management */\n/************************************************************/\n\n/**\n * Updates a cell's visual state by adding a type class.\n * Removes 'empty' class before adding new type.\n * @param {HTMLElement} boardElem - Board container\n * @param {number} cellIndex - Index of cell to update (0-99)\n * @param {string} cellType - Cell type: 'ship', 'hit', 'miss', etc.\n */\nfunction editCellType(boardElem, cellIndex, cellType) {\n  const curCell = boardElem.children[cellIndex];\n  curCell.classList.remove('empty');\n  curCell.classList.add(cellType);\n}\n\n/**\n * Replaces one class with another on a cell element.\n * @param {HTMLElement} cellElem - Cell element to modify\n * @param {string} currentClass - Class to remove\n * @param {string} newClass - Class to add\n */\nfunction replaceCellClass(cellElem, currentClass, newClass) {\n  cellElem.classList.replace(currentClass, newClass);\n}\n\n/**\n * Checks if a cell can be attacked (empty or has ship, not already hit/miss).\n * @param {HTMLElement} cellElem - Cell element to check\n * @returns {boolean} True if cell can be attacked\n */\nfunction isEmptyOrShipCell(cellElem) {\n  const emptyOrShip = cellElem.classList.contains('empty') || cellElem.classList.contains('ship');\n  const hitOrMiss = cellElem.classList.contains('hit') || cellElem.classList.contains('miss');\n  return emptyOrShip && !hitOrMiss;\n}\n\n/************************************************************/\n/* Coordinate Conversion */\n/************************************************************/\n\n/**\n * Converts a cell's linear index to 2D board coordinates.\n * @param {HTMLElement} cellElem - Cell element with 'index' attribute\n * @returns {[number, number]} Array [x, y] where x is row, y is column\n */\nfunction getCellCoords(cellElem) {\n  const index = Number(cellElem.getAttribute('index'));\n  const x = Math.floor(index / BOARD_SIZE);\n  const y = index % BOARD_SIZE;\n  return [x, y];\n}\n\n\n;// ./src/modules/gameboard.js\n\n\n\n\n/**\n * Represents a Battleship game board with ship placement, attack handling, and collision detection.\n * \n * @class Gameboard\n * \n * @property {Array<Array<Ship|boolean|null>>} gameBoardMatrix - Main game state matrix.\n *   - `null`: empty cell\n *   - `Ship`: ship object (not yet hit)\n *   - `true`: hit cell\n *   - `false`: miss cell\n * @property {Array<Array<string>>} testMatrix - Validation matrix for ship placement.\n *   - `'-'`: empty\n *   - `'X'`: temporary position being verified\n *   - `'ship'`: confirmed ship position\n * @property {Ship[]} shipsArr - Array of placed Ship objects.\n * @property {Array<[number, number]>} shipsCoords - Starting coordinates for each placed ship.\n * @property {boolean[]} shipsHorizontal - Orientation for each ship (true = horizontal, false = vertical).\n * \n * @example\n * const board = new Gameboard();\n * board.placeShip(0, 0); // Places first ship (Carrier) horizontally at (0,0)\n * board.changeAxis();    // Toggle to vertical\n * board.placeShip(5, 5); // Places second ship (Battleship) vertically at (5,5)\n */\nclass Gameboard {\n  constructor() {\n    this.gameBoardMatrix = Array.from({length: BOARD_SIZE}, () => Array(BOARD_SIZE).fill(null)); \n    this.testMatrix = Array.from({length: BOARD_SIZE}, () => Array(BOARD_SIZE).fill('-')); \n    this.shipsArr = [];\n    this.shipsCoords = [];\n    this.shipsHorizontal = Array(SHIP_LENGTHS.length).fill(true);\n  }\n\n  // Helper methods\n\n  /**\n   * Checks if a cell at (x, y) collides with any neighboring ships.\n   * A collision occurs if any of the 8 surrounding cells contains a confirmed ship.\n   * \n   * @private\n   * @param {number} x - Row coordinate.\n   * @param {number} y - Column coordinate.\n   * @returns {boolean} True if collision detected, false otherwise.\n   */\n  collision(x, y) {\n    const neighborXArr = [-1, -1, -1, 1, 1, 1, 0, 0]; \n    const neighborYArr = [-1, 0, 1, -1, 0, 1, -1, 1]; \n    for (let i = 0; i < neighborXArr.length; i++) {\n      const neighborX = x + neighborXArr[i];\n      const neighborY = y + neighborYArr[i];\n      if (isCoordValid(neighborX, neighborY)) {\n        if (this.testMatrix[neighborX][neighborY] === 'ship') {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Validates and tentatively places the next ship starting at (x, y).\n   * Checks all cells the ship will occupy for validity and collisions.\n   * Updates testMatrix with 'ship' markers if valid, or reverts if invalid.\n   * \n   * @private\n   * @param {number} x - Starting row coordinate.\n   * @param {number} y - Starting column coordinate.\n   * @returns {boolean} True if all ship cells are valid and collision-free, false otherwise.\n   */\n  checkShipCoord(x, y) {\n    this.shipsCoords.push([x, y]);\n    const idx = this.shipsCoords.length - 1;\n    const size = SHIP_LENGTHS[idx];\n    const isHorizontal = this.shipsHorizontal[idx];\n\n    for (let i = 0; i < size; i++) {\n      if (!isCoordValid(x, y) || this.collision(x, y)) {\n        this.shipsCoords.pop();\n        return false;\n      }\n      this.testMatrix[x][y] = 'X';\n      if (isHorizontal) y++;\n      else x++;\n    }\n\n    // Mark validated cells as confirmed ships\n    let [tempX, tempY] = this.shipsCoords[idx];\n    for (let i = 0; i < size; i++) {\n      this.testMatrix[tempX][tempY] = 'ship';\n      if (isHorizontal) tempY++;\n      else tempX++;\n    }\n    return true;\n  }\n\n  /**\n   * Marks all empty cells surrounding a sunk ship as misses using BFS.\n   * Prevents wasted guesses on cells adjacent to destroyed ships.\n   * \n   * @private\n   * @param {number} x - Row coordinate of a sunk ship cell.\n   * @param {number} y - Column coordinate of a sunk ship cell.\n   */\n  markSunkShipNeighbors(x, y) {\n    const visited = Array.from({length: BOARD_SIZE}, () => Array(BOARD_SIZE).fill(false)); \n    const neighborXArr = [-1, -1, -1, 1, 1, 1, 0, 0]; \n    const neighborYArr = [-1, 0, 1, -1, 0, 1, -1, 1]; \n    const coordQueue = [[x, y]];\n\n    while (coordQueue.length !== 0) {\n      const [curX, curY] = coordQueue.shift();\n      if (!visited[curX][curY]) {\n        visited[curX][curY] = true;\n        for (let i = 0; i < neighborXArr.length; i++) {\n          const neighborX = curX + neighborXArr[i];\n          const neighborY = curY + neighborYArr[i];\n          if (isCoordValid(neighborX, neighborY)) {\n            if (this.gameBoardMatrix[neighborX][neighborY] === null) {\n              this.gameBoardMatrix[neighborX][neighborY] = false;\n            } else if (this.gameBoardMatrix[neighborX][neighborY] === true) {\n              coordQueue.push([neighborX, neighborY]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // Ship placement methods\n\n  /**\n   * Attempts to place the next ship starting at (x, y).\n   * Uses current axis orientation from shipsHorizontal array.\n   * Updates gameBoardMatrix with Ship objects on success.\n   * Ships are placed in order: Carrier → Battleship → Cruiser → Submarine → Destroyer.\n   * \n   * @param {number} x - Starting row coordinate (0-9).\n   * @param {number} y - Starting column coordinate (0-9).\n   * @returns {boolean} True if ship placed successfully, false if invalid position.\n   */\n  placeShip(x, y) {\n    if (this.checkShipCoord(x, y)) {\n      const idx = this.shipsCoords.length - 1;\n      const size = SHIP_LENGTHS[idx];\n      const isHorizontal = this.shipsHorizontal[idx];\n\n      this.shipsArr.push(new ship(size));\n      const curShip = this.shipsArr[idx];\n\n      for (let i = 0; i < size; i++) {\n        this.gameBoardMatrix[x][y] = curShip;\n        if (isHorizontal) {\n          y++;\n        } else {\n          x++;\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Toggles the axis orientation for all ships (horizontal ↔ vertical).\n   * Affects the next ship to be placed.\n   */\n  changeAxis() {\n    this.shipsHorizontal = this.shipsHorizontal.map(axis => !axis);\n  }\n\n  /**\n   * Automatically places all ships in random valid positions with random orientations.\n   * Continues attempting placement until all ships are successfully positioned.\n   */\n  randomizeShips() {\n    for (let i = 0; i < SHIP_LENGTHS.length; i++) {\n      this.shipsHorizontal[i] = Math.random() < 0.5;\n      let isPlaced = null;\n      do {\n        const x = Math.floor(Math.random() * BOARD_SIZE);\n        const y = Math.floor(Math.random() * BOARD_SIZE);\n        isPlaced = this.placeShip(x, y);\n      } while (!isPlaced);\n    }\n  }\n\n  /**\n   * Returns an array indicating which ships have been placed.\n   * Index corresponds to SHIP_NAMES order: [carrier, battleship, cruiser, submarine, destroyer].\n   * \n   * @returns {boolean[]} Array of booleans; true at index i means ship i is placed.\n   */\n  getIsShipPlacedArr() {\n    const isPlacedArr = Array(SHIP_LENGTHS.length).fill(false);\n    for (let i = 0; i < this.shipsArr.length; i++) {\n      isPlacedArr[i] = true;\n    }\n    return isPlacedArr;\n  }\n\n  /**\n   * Checks if all ships have been placed on the board.\n   * \n   * @returns {boolean} True if all ships placed, false otherwise.\n   */\n  isAllShipsPlaced() {\n    return this.shipsArr.length === SHIP_LENGTHS.length;\n  }\n\n  // Attack methods\n\n  /**\n   * Processes an attack at the specified coordinates.\n   * Updates gameBoardMatrix: Ship → true (hit), null → false (miss).\n   * Automatically marks neighbors of sunk ships as misses.\n   * \n   * @param {number} x - Row coordinate of the attack.\n   * @param {number} y - Column coordinate of the attack.\n   * @returns {boolean|null} True if hit, false if miss, null if invalid coordinates or already attacked.\n   */\n  receiveAttack(x, y) {\n    if (!isCoordValid(x, y)) return null;\n\n    // Hit case\n    if (this.gameBoardMatrix[x][y] instanceof ship) {\n      this.gameBoardMatrix[x][y].hit();\n      if (this.gameBoardMatrix[x][y].isSunk()) {\n        this.markSunkShipNeighbors(x, y);\n      }\n      this.gameBoardMatrix[x][y] = true;\n      return true;\n    }\n    // Miss case\n    else if (this.gameBoardMatrix[x][y] === null) {\n      this.gameBoardMatrix[x][y] = false;\n      return false;\n    }\n    // Already attacked\n    return null;\n  }\n\n  /**\n   * Checks if all ships on the board have been sunk.\n   * \n   * @returns {boolean} True if all ships destroyed, false if any ship remains afloat.\n   */\n  isAllShipsSunk() {\n    for (const ship of this.shipsArr) {\n      if (!ship.isSunk()) return false;\n    }\n    return true;\n  }\n\n  // Display methods\n\n  /**\n   * Returns a simplified 2D string representation of the board state.\n   * \n   * @returns {string[][]} 10x10 array where:\n   *   - `'-'`: empty cell\n   *   - `'H'`: hit (ship cell that was hit)\n   *   - `'M'`: miss\n   *   - `'X'`: ship cell (not yet hit)\n   */\n  display() {\n    return this.gameBoardMatrix.map((row) => {\n      return row.map((item) => {\n        if (item === null) return '-';\n        else if (item === true) return 'H';\n        else if (item === false) return 'M';\n        else return 'X';\n      });\n    });\n  }\n}\n\n/* harmony default export */ const gameboard = (Gameboard);\n;// ./src/modules/player.js\n\n\n/**\n * Represents a player in the Battleship game.\n * \n * @class Player\n * @param {boolean} isComputer - Indicates whether the player is controlled by AI.\n * @param {string} [name=\"Computer\"] - The player's display name.\n * \n * @property {boolean} isComputer - Whether this player is AI-controlled.\n * @property {string} name - The player's name.\n * @property {Gameboard} gameboard - The player's personal game board containing ships and attack history.\n * \n * @example\n * const player1 = new Player(false, \"Ayman\");\n * const computerPlayer = new Player(true);\n */\nclass Player {\n  constructor(isComputer, name = \"Computer\") {\n    this.isComputer = isComputer;\n    this.name = name;\n    this.gameboard = new gameboard();\n  }\n\n  // Ship placement methods\n\n  /**\n   * Places a ship on the player's game board at the specified coordinates.\n   * \n   * @param {number} x - The row coordinate (0-9).\n   * @param {number} y - The column coordinate (0-9).\n   * @returns {boolean} True if the ship was successfully placed, false otherwise.\n   */\n  placeShip(x, y) {\n    return this.gameboard.placeShip(x, y);\n  }\n\n  /**\n   * Toggles the axis orientation (horizontal/vertical) for the next ship placement.\n   */\n  changeShipAxis() {\n    this.gameboard.changeAxis();\n  }\n\n  /**\n   * Automatically places all ships randomly on the board with valid positions.\n   */\n  randomizeShips() {\n    this.gameboard.randomizeShips();\n  }\n\n  /**\n   * Returns an array indicating which ships have been placed on the board.\n   * \n   * @returns {boolean[]} Array where each index corresponds to a ship type (Carrier, Battleship, etc.).\n   */\n  getIsShipPlacedArr() {\n    return this.gameboard.getIsShipPlacedArr();\n  }\n\n  /**\n   * Checks if all ships have been placed on the board.\n   * \n   * @returns {boolean} True if all 5 ships are placed, false otherwise.\n   */\n  isAllShipsPlaced() {\n    return this.gameboard.isAllShipsPlaced();\n  }\n\n  // Attack methods\n\n  /**\n   * Receives an attack at the specified board coordinates.\n   * Marks the cell as hit or miss and updates ship damage if applicable.\n   * \n   * @param {number} x - The row coordinate being attacked.\n   * @param {number} y - The column coordinate being attacked.\n   * @returns {boolean} True if the attack hit a ship, false if it missed, null if coordinates aren't valid.\n   */\n  receiveAttack(x, y) {\n    return this.gameboard.receiveAttack(x, y);\n  }\n\n  /**\n   * Determines if the player has lost the game (all ships sunk).\n   * \n   * @returns {boolean} True if all ships on this player's board are sunk, false otherwise.\n   */\n  isLoser() {\n    return this.gameboard.isAllShipsSunk();\n  }\n\n  // Display methods\n\n  /**\n   * Returns a visual representation of the game board.\n   * \n   * @returns {Array[]} 2D array representing the current board state.\n   */\n  getBoard() {\n    return this.gameboard.display();\n  }\n}\n\n/* harmony default export */ const player = (Player);\n\n;// ./src/modules/UIFunctions.js\n\n// Import Helper functions\n\n\n// DOM elements \nconst bannerElem = document.querySelector(\".banner\");\n// Screens\nconst gameModeScreen = document.querySelector(\".game-mode-screen\");\nconst gameScreen = document.querySelector(\".game-screen\");\n// Player Names form\nconst playerNamesForm = document.querySelector(\".player-names-form\");\nconst firstNameInput = document.getElementById(\"fname\");\nconst secondNameInput = document.getElementById(\"sname\");\nconst secondNameContainer = document.querySelector(\".second-player-name-input\");\n// First board \nconst shipsContainerFirst = document.querySelector(\".first-side-ships\");\nconst firstBoardElem = document.querySelector(\".first-board\");\nconst firstBoardBanner = document.querySelector(\".first-board-title\");\nconst firstShipPlacementBtns = document.querySelectorAll(\".first-ship-placement-btns button\");     \n// Second board \nconst shipsContainerSecond = document.querySelector(\".second-side-ships\");\nconst secondBoardElem = document.querySelector(\".second-board\");\nconst secondBoardBanner = document.querySelector(\".second-board-title\");\nconst secondShipPlacementBtns  = document.querySelectorAll(\".second-ship-placement-btns button\");\n// Play again button\nconst playAgainBtn = document.querySelector(\".play-again-btn\");\n\n// # Main functions\nfunction renderBanner(text) {\n  bannerElem.textContent = text;\n}\n\n// ## Render Screens functions\nfunction initialRender() {\n  renderEmptyBoard(firstBoardElem);\n  renderEmptyBoard(secondBoardElem);\n  // Render ships on the side of each board\n  addSideShipsToDOM(shipsContainerFirst);\n  addSideShipsToDOM(shipsContainerSecond);\n}\nfunction resetDOM() {\n  // Remove all cells in the game boards\n  removeChildren(firstBoardElem);\n  removeChildren(secondBoardElem);\n  // Reset player names form input values\n  firstNameInput.value = '';\n  secondNameInput.value = '';\n  // Render boards\n  renderEmptyBoard(firstBoardElem);\n  renderEmptyBoard(secondBoardElem);\n  // Render ships on the side of boards\n  showSideShips(shipsContainerFirst);\n  showSideShips(shipsContainerSecond);\n  // Reset ships direction to vertical\n  shipsContainerFirst.nextElementSibling.textContent = '→';\n  shipsContainerSecond.nextElementSibling.textContent = '→';\n  // Hide play again button\n  hideElem(playAgainBtn);\n  // Hide all screens\n  hideElem(gameModeScreen);\n  hideElem(gameScreen);\n  hideElem(playerNamesForm);\n}\nfunction renderGameModeScreen() {\n  // Hide other screens\n  hideElem(gameScreen);\n  hideElem(playerNamesForm);\n  // Show game mode screen\n  renderBanner('Select Game Mode');\n  showElem(gameModeScreen);\n}\nfunction renderGameScreen() {\n  // Hide other screens\n  hideElem(gameModeScreen);\n  hideElem(playerNamesForm);\n  // Show game screen and ship placement buttons\n  showElem(gameScreen);\n  // Show first player ship placement buttons and hide second player buttons\n  showFirstShipPlacementBtns();\n  hideSecondShipPlacementBtns();\n}\nfunction showPlayAgainBtn() {\n  showElem(playAgainBtn);\n}\n\n// ## Player names form functions\nfunction renderPlayerNamesFormScreen(isComputerMode) {\n  // If computer mode hide second input div and make it not \n  if (isComputerMode) {\n    secondNameInput.required = false;\n    hideElem(secondNameContainer);\n  }\n  // else show it and make it required\n  else {\n    secondNameInput.required = true;\n    showElem(secondNameContainer);\n  }\n  // Hide other screens\n  hideElem(gameModeScreen);\n  hideElem(gameScreen);\n  // Show player names form screen\n  renderBanner('');\n  showElem(playerNamesForm);\n}\nfunction getFirstPlayerName() {\n  return firstNameInput.value.trim();\n}\nfunction getSecondPlayerName() {\n  return secondNameInput.value.trim();\n}\n\n// ## Side ships functions\nfunction renderSideShips(shipsContainerElem) {\n  return (shipsPlacedArr) => {\n    for (let i = 0; i < shipsPlacedArr.length; i++) {\n      const shipElem = shipsContainerElem.children[i];\n      if (shipElem) {\n        // If ship is placed on board hide it from the side\n        if (shipsPlacedArr[i]) {\n          shipElem.classList.add('placed');\n        }\n        else {\n          shipElem.classList.remove('placed');\n        }\n      }\n    }\n  };\n}\nconst renderSideShipsFirst = renderSideShips(shipsContainerFirst);\nconst renderSideShipsSecond = renderSideShips(shipsContainerSecond);\n\nfunction changeSideShipsAxisFirst() {\n  // Get next elem to shipsContainerFirst\n  const directionElem = shipsContainerFirst.nextElementSibling;\n  // Change text content of ship-direction\n  const curDirection = directionElem.textContent;\n  directionElem.textContent = curDirection === '→' ? '↓' : '→'; \n}\nfunction changeSideShipsAxisSecond() {\n  // Get next elem to shipsContainerFirst\n  const directionElem = shipsContainerSecond.nextElementSibling;\n  // Change text content of ship-direction\n  const curDirection = directionElem.textContent;\n  directionElem.textContent = curDirection === '→' ? '↓' : '→'; \n}\n\n// ## Game board functions\nfunction renderBoard(boardElem) {\n  return (playerObj) => {\n    const gamebaord = playerObj.getBoard();\n    for (let i = 0; i < BOARD_SIZE; i++) {\n      for (let j = 0; j < BOARD_SIZE; j++) {\n        // Calculate cell index\n        const cellIndex = i * BOARD_SIZE + j;\n        if (gamebaord[i][j] === 'X') { // Ship cell\n          editCellType(boardElem, cellIndex, 'ship');\n        }\n        else if (gamebaord[i][j] === 'H') { // Hit cell\n          editCellType(boardElem, cellIndex, 'hit');\n        }\n        else if (gamebaord[i][j] === 'M') { // Miss cell\n          editCellType(boardElem, cellIndex, 'miss');\n        }\n        else { // Empty cell\n          editCellType(boardElem, cellIndex, 'empty');\n        }\n      }\n    }\n  };\n}\nconst renderFirstBoard = renderBoard(firstBoardElem);\nconst renderSecondBoard = renderBoard(secondBoardElem);\n\nfunction hideBoard(boardElem) {\n  return () => {\n    for (const cell of boardElem.children) {\n      cell.classList.add('hidden-cell');\n    }\n  };\n}\nconst hideFirstBoard = hideBoard(firstBoardElem);\nconst hideSecondBoard = hideBoard(secondBoardElem);\n\nfunction showBoard(boardElem) {\n  return () => {\n    for (const cell of boardElem.children) {\n      cell.classList.remove('hidden-cell');\n    }\n  };\n}\nconst showFirstBoard = showBoard(firstBoardElem);\nconst showSecondBoard = showBoard(secondBoardElem);\n\nfunction renderBoardsBanner(firstPlayerName, secondPlayerName) {\n  const firstText = firstPlayerName + \"'s board\";\n  firstBoardBanner.textContent = firstText.toUpperCase();\n  const secondText = secondPlayerName + \"'s board\";\n  secondBoardBanner.textContent = secondText.toUpperCase();\n}\n\n// ## Ship placement buttons functions\nfunction showFirstShipPlacementBtns() {\n  firstShipPlacementBtns.forEach(showElem);\n}\nfunction showSecondShipPlacementBtns() {\n  secondShipPlacementBtns.forEach(showElem);\n}\nfunction hideFirstShipPlacementBtns() {\n  firstShipPlacementBtns.forEach(hideElem);\n}\nfunction hideSecondShipPlacementBtns() {\n  secondShipPlacementBtns.forEach(hideElem);\n}\n\n// # Board cell functions\nfunction getCellFromCoordsFirstBoard(x, y) {\n  // Calculate index from coords\n  const cellIndex = x * BOARD_SIZE + y;\n  // Get cell from board.children\n  const cell = firstBoardElem.children[cellIndex];\n  return cell;\n}\n\n\n;// ./src/modules/eventListeners.js\n// Game mode buttons\nconst gameModeBtns = document.querySelectorAll(\".game-mode-btn\");\n// Player Names form\nconst eventListeners_playerNamesForm = document.querySelector(\".player-names-form\");\n// First board \nconst eventListeners_firstBoardElem = document.querySelector(\".first-board\");\nconst changeAxisBtnFirst = document.querySelector(\".change-axis-first-btn\");\nconst randomizeBtnFirst = document.querySelector(\".randomize-first-btn\");\n// Second board \nconst eventListeners_secondBoardElem = document.querySelector(\".second-board\");\nconst changeAxisBtnSecond = document.querySelector(\".change-axis-second-btn\");\nconst randomizeBtnSecond = document.querySelector(\".randomize-second-btn\");\n// Play again button\nconst eventListeners_playAgainBtn = document.querySelector(\".play-again-btn\");\n\n// Game mode buttons\nfunction addEventListenerGameModeBtns(handleGameModeClick) {\n  gameModeBtns.forEach((btn) => {\n    btn.addEventListener('click', handleGameModeClick);\n  });\n}\nfunction removeEventListenerGameModeBtns(handleGameModeClick) {\n  gameModeBtns.forEach((btn) => {\n    btn.removeEventListener('click', handleGameModeClick);\n  });\n}\n\n// Player names form \nfunction addEventListenerPlayerNamesForm(handleFormSubmit) {\n  eventListeners_playerNamesForm.addEventListener(\"submit\", handleFormSubmit);\n}\nfunction removeEventListenerPlayerNamesForm(handleFormSubmit) {\n  eventListeners_playerNamesForm.removeEventListener(\"submit\", handleFormSubmit);\n}\n\n// First Board Event Listeners\nfunction addEventListenersFirstBoard(handleBoardClickFunc, handleChangeAxisFunc, handleRandomizeFunc) {\n  eventListeners_firstBoardElem.addEventListener('click', handleBoardClickFunc);\n  changeAxisBtnFirst.addEventListener('click', handleChangeAxisFunc);\n  randomizeBtnFirst.addEventListener('click', handleRandomizeFunc);\n}\nfunction removeEventListenersFirstBoard(handleBoardClickFunc, handleChangeAxisFunc, handleRandomizeFunc) {\n  eventListeners_firstBoardElem.removeEventListener('click', handleBoardClickFunc);\n  changeAxisBtnFirst.removeEventListener('click', handleChangeAxisFunc);\n  randomizeBtnFirst.removeEventListener('click', handleRandomizeFunc);\n}\n\n// Second Board Event Listeners\nfunction addEventListenersSecondBoard(handleBoardClickFunc, handleChangeAxisFunc, handleRandomizeFunc) {\n  eventListeners_secondBoardElem.addEventListener('click', handleBoardClickFunc);\n  changeAxisBtnSecond.addEventListener('click', handleChangeAxisFunc);\n  randomizeBtnSecond.addEventListener('click', handleRandomizeFunc);\n}\nfunction removeEventListenersSecondBoard(handleBoardClickFunc, handleChangeAxisFunc, handleRandomizeFunc) {\n  eventListeners_secondBoardElem.removeEventListener('click', handleBoardClickFunc);\n  changeAxisBtnSecond.removeEventListener('click', handleChangeAxisFunc);\n  randomizeBtnSecond.removeEventListener('click', handleRandomizeFunc);\n}\n\n// Attack event listeners\nfunction addEventListenersForAttack(handleFirstPlayerAttack, handleSecondPlayerAttack) {\n  // Handle second player attack if 2 players mode \n  if (handleSecondPlayerAttack !== null) {\n    eventListeners_firstBoardElem.addEventListener('click', handleSecondPlayerAttack);\n  }\n  eventListeners_secondBoardElem.addEventListener('click', handleFirstPlayerAttack);\n}\nfunction removeEventListenersForAttack(handleFirstPlayerAttack, handleSecondPlayerAttack) {\n  // Handle second player attack if 2 players mode \n  if (handleSecondPlayerAttack !== null) {\n    eventListeners_firstBoardElem.removeEventListener('click', handleSecondPlayerAttack);\n  }\n  eventListeners_secondBoardElem.removeEventListener('click', handleFirstPlayerAttack);\n}\n\n// Play again button event listener\nfunction addEventListenerPlayAgainBtn(handlePlayAgainClick) {\n  eventListeners_playAgainBtn.addEventListener('click', handlePlayAgainClick);\n} \nfunction removeEventListenerPlayAgainBtn(handlePlayAgainClick) {\n  eventListeners_playAgainBtn.removeEventListener('click', handlePlayAgainClick);\n} \n\n\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\nvar injectStylesIntoStyleTag = __webpack_require__(72);\nvar injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleDomAPI.js\nvar styleDomAPI = __webpack_require__(825);\nvar styleDomAPI_default = /*#__PURE__*/__webpack_require__.n(styleDomAPI);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertBySelector.js\nvar insertBySelector = __webpack_require__(659);\nvar insertBySelector_default = /*#__PURE__*/__webpack_require__.n(insertBySelector);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\nvar setAttributesWithoutAttributes = __webpack_require__(56);\nvar setAttributesWithoutAttributes_default = /*#__PURE__*/__webpack_require__.n(setAttributesWithoutAttributes);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertStyleElement.js\nvar insertStyleElement = __webpack_require__(540);\nvar insertStyleElement_default = /*#__PURE__*/__webpack_require__.n(insertStyleElement);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleTagTransform.js\nvar styleTagTransform = __webpack_require__(113);\nvar styleTagTransform_default = /*#__PURE__*/__webpack_require__.n(styleTagTransform);\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/styles.css\nvar styles = __webpack_require__(365);\n;// ./src/styles.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (styleTagTransform_default());\noptions.setAttributes = (setAttributesWithoutAttributes_default());\noptions.insert = insertBySelector_default().bind(null, \"head\");\noptions.domAPI = (styleDomAPI_default());\noptions.insertStyleElement = (insertStyleElement_default());\n\nvar update = injectStylesIntoStyleTag_default()(styles/* default */.A, options);\n\n\n\n\n       /* harmony default export */ const src_styles = (styles/* default */.A && styles/* default */.A.locals ? styles/* default */.A.locals : undefined);\n\n;// ./src/main.js\n// Constants\n\n// JS modules\n\n\n\n\n// CSS styles file\n\n\n// # Global variables\n// ## Game mode and state variables\nlet isComputerMode = null;\nlet curPlayer = null;\nlet finishedPlacingShips = false;\n// ## Computer variables\nlet hitCellNeighborCoordsQueue = []; \n// ## Players Objects\nlet firstPlayer = null;\nlet secondPlayer = null;\n// ## Players functions\nlet handlePlaceShipFirstPlayer = null;\nlet handlePlaceShipSecondPlayer = null;\nlet handleFirstPlayerAttack = null;\nlet handleSecondPlayerAttack = null;\nlet handleChangeAxisFirstBoard = null;\nlet handleChangeAxisSecondBoard = null;\nlet handleRandomizeFirstBoard = null;\nlet handleRandomizeSecondBoard = null;\n\n// # Helper functions\nfunction updateHitCellNeighborCoordsQueue(x, y) {\n  // Neighbor indices arrays\n  const neighborXArr = [-1, 1, 0, 0]; \n  const neighborYArr = [0, 0, -1, 1]; \n  for (let i = 0; i < neighborXArr.length; i++) {\n    const neighborX = x + neighborXArr[i];\n    const neighborY = y + neighborYArr[i];\n    // If neighbor coords are valid and cell is empty or ship, push them to the queue\n    if (isCoordValid(neighborX, neighborY)) {\n      const hitCell = getCellFromCoordsFirstBoard(neighborX, neighborY);\n      if (isEmptyOrShipCell(hitCell)) {\n        hitCellNeighborCoordsQueue.push([neighborX, neighborY]);\n      }\n    }\n  }\n}\nfunction getHitCellNeighborCoords() {\n  while (hitCellNeighborCoordsQueue.length !== 0) {\n    // Get the first coordinates in the queue\n    const [x, y] = hitCellNeighborCoordsQueue.shift();\n    const cell = getCellFromCoordsFirstBoard(x, y);\n    // Make sure the cell is empty or ship\n    if (isEmptyOrShipCell(cell)) {\n      return [x, y];\n    }\n  }\n  return null;\n}\nfunction getRandomCoords() {\n  for (let cnt = 0; cnt < 100; cnt++) {\n    // Get random coordinates\n    const x = Math.floor(Math.random() * BOARD_SIZE);\n    const y = Math.floor(Math.random() * BOARD_SIZE);\n    // Make sure the cell is empty or ship\n    const cell = getCellFromCoordsFirstBoard(x, y);\n    if (isEmptyOrShipCell(cell)) {\n      return [x, y];\n    }\n  }\n  return null;\n}\n\n// # Main functions\n// ## Game flow functions\nfunction startNewGame() {\n  // Reset global variables\n  isComputerMode = null;\n  curPlayer = null;\n  finishedPlacingShips = false;\n  hitCellNeighborCoordsQueue = [];\n  firstPlayer = null;\n  secondPlayer = null;\n  // Reset player functions\n  handlePlaceShipFirstPlayer = null;\n  handlePlaceShipSecondPlayer = null;\n  handleFirstPlayerAttack = null;\n  handleSecondPlayerAttack = null;\n  handleChangeAxisFirstBoard = null;\n  handleChangeAxisSecondBoard = null;\n  handleRandomizeFirstBoard = null;\n  handleRandomizeSecondBoard = null;\n  // Reset screen and render Game Mode screen\n  resetDOM();\n  renderGameModeScreen();\n  addEventListenerGameModeBtns(handleGameModeClick);\n}\nfunction initGameScreen() {\n  // Remove player names form event listener\n  removeEventListenerPlayerNamesForm(handlePlayerNamesFormSubmit);\n  // Define all player functions here\n  // First Player\n  handlePlaceShipFirstPlayer = handlePlaceShip(firstPlayer);\n  handleFirstPlayerAttack = handlePlayerAttack(firstPlayer, secondPlayer);\n  handleChangeAxisFirstBoard = handleChangeAxis(firstPlayer);\n  handleRandomizeFirstBoard = handleRandomize(firstPlayer);\n  // Define second player functions only if game mode is 2 players\n  if (!isComputerMode) {\n    // Second player\n    handlePlaceShipSecondPlayer = handlePlaceShip(secondPlayer);\n    handleSecondPlayerAttack = handlePlayerAttack(secondPlayer, firstPlayer);\n    handleChangeAxisSecondBoard = handleChangeAxis(secondPlayer);\n    handleRandomizeSecondBoard = handleRandomize(secondPlayer);\n  }\n  // Render game Screen\n  renderGameScreen();\n  // Render boards banner\n  renderBoardsBanner(firstPlayer.name, secondPlayer.name);\n  // First player place ships\n  placeFirstPlayerShips();\n}\nfunction continueGameAfterShipsPlacement() {\n  // If 2 players mode remove second board event Listeners\n  if (!isComputerMode) {\n    removeEventListenersSecondBoard(handlePlaceShipSecondPlayer, handleChangeAxisSecondBoard, handleRandomizeSecondBoard);\n  }\n\n  finishedPlacingShips = true;\n  // Hide second board if computer mode\n  if (isComputerMode) {\n    hideSecondBoard();\n  }\n  else {\n    // Todo: Hide second board ship placement buttons\n    hideSecondShipPlacementBtns();\n  }\n  // Render Second board \n  renderSecondBoard(secondPlayer);\n  // Hide second board and show first board\n  setTimeout(() => {\n    hideSecondBoard();\n    showFirstBoard();\n    // Display current player turn\n    renderBanner(`${curPlayer}'s turn - Attack!`);\n    // Add Attack event listeners for each board\n    addEventListenersForAttack(handleFirstPlayerAttack, handleSecondPlayerAttack);\n  }, 1000);\n}\nfunction switchPlayerTurn(nextPlayerName) {\n  // change curPlayer global variable\n  curPlayer = nextPlayerName;\n  // render player turn banner\n  renderBanner(`${curPlayer}'s turn - Attack!`);\n  if (curPlayer === firstPlayer.name) { // First player case\n    // show first player board\n    showFirstBoard(); \n    // hide second player board\n    hideSecondBoard();\n  }\n  else { // Second player case\n    if (isComputerMode) { // Computer mode\n      setTimeout(() => {\n        // Make computer attack first player\n        computerAttack();\n      }, 1000);\n    }\n    else { // 2 players mode\n      // Show second player board \n      showSecondBoard();\n      // Hide first player board\n      hideFirstBoard();\n    }\n  }\n}\nfunction endGame(winningPlayerName) {\n  renderBanner(`${winningPlayerName} Won!`);\n  // Show play again button\n  showPlayAgainBtn();\n  // Add event listener for play again button\n  addEventListenerPlayAgainBtn(handlePlayAgainClick);\n  // Remove attack event listener for all boards\n  removeEventListenersForAttack(handleFirstPlayerAttack, handleSecondPlayerAttack);\n}\nfunction moveToPlayerNamesFormScreen(isComputerMode) {\n  removeEventListenerGameModeBtns(handleGameModeClick);\n  renderPlayerNamesFormScreen(isComputerMode);\n  addEventListenerPlayerNamesForm(handlePlayerNamesFormSubmit);\n}\n\n// ## Game mode screen functions\nfunction handleGameModeClick(event) {\n  // Get the closest ancestor element with game-mode-btn class\n  const button = event.target.closest('.game-mode-btn');\n  if (!button) return;\n  isComputerMode = button.classList.contains('computer-mode-btn');\n  moveToPlayerNamesFormScreen(isComputerMode);\n}\nfunction handlePlayerNamesFormSubmit(event) { \n  event.preventDefault();\n  // Init firstPlayer\n  firstPlayer = new player(false, getFirstPlayerName());\n  if (isComputerMode) {\n    // Init second player (computer)\n    secondPlayer = new player(true);\n  }\n  else {\n    // Init second player\n    secondPlayer = new player(false, getSecondPlayerName());\n  }\n  curPlayer = firstPlayer.name;\n  initGameScreen();\n}\n\n// ## Player attack function\nfunction handlePlayerAttack(attacker, attackedPlayer) {\n  return (event) => {\n    // Make sure it's current player turn\n    if (curPlayer !== attacker.name) return;\n    const curCell = event.target;\n    // make sure it's an empty or ship cell\n    if (isEmptyOrShipCell(curCell)) {      \n      // Get x and y coordinates\n      const [x, y] = getCellCoords(curCell);\n      // Attack second board\n      const isHit = attackedPlayer.receiveAttack(x, y);\n      if (isHit) { // Hit case\n        // replace ship class with hit class\n        replaceCellClass(curCell, 'ship', 'hit');\n        if (attackedPlayer === firstPlayer) {\n          renderFirstBoard(firstPlayer);\n        }\n        else {\n          renderSecondBoard(secondPlayer);\n        }\n      }\n      else { // Miss case\n        // Replace empty class with miss class\n        replaceCellClass(curCell, 'empty', 'miss');\n        // Switch to next player\n        switchPlayerTurn(attackedPlayer.name);\n      }\n      // Check if game ended\n      if (attackedPlayer.isLoser()) {\n        // Call End game function \n        endGame(attacker.name);\n      }\n    }\n  };\n}\n\n// ## Ships placement functions\nfunction placeFirstPlayerShips() {\n  // First player turn to place Ships\n  renderBanner(`${firstPlayer.name}'s turn to place ships`);\n  // Show first board ship placement buttons\n  showFirstShipPlacementBtns();\n  // Event listener for first board\n  addEventListenersFirstBoard(handlePlaceShipFirstPlayer, handleChangeAxisFirstBoard, handleRandomizeFirstBoard);\n}\nfunction placeSecondPlayerShips() {\n  // Remove first board event Listeners\n  removeEventListenersFirstBoard(handlePlaceShipFirstPlayer, handleChangeAxisFirstBoard, handleRandomizeFirstBoard);\n  // Render First board\n  renderFirstBoard(firstPlayer);\n\n  setTimeout( () => {\n    // Second player turn to place Ships\n    renderBanner(`${secondPlayer.name}'s turn to place ships`);\n    // Hide first board ship placement\n    hideFirstShipPlacementBtns();\n    if (isComputerMode) { // Computer mode\n      placeComputerShips();\n    }\n    else { // 2 players mode\n      // Hide first board from the second player\n      hideFirstBoard();\n      // Show second board ship placement buttons\n      showSecondShipPlacementBtns();\n      // Event listener for second board\n      addEventListenersSecondBoard(handlePlaceShipSecondPlayer, handleChangeAxisSecondBoard, handleRandomizeSecondBoard);\n    }\n  }, 1000);\n}\nfunction handlePlaceShip(playerObj) {\n  return (event) => {\n    // If all ships are already placed return\n    if (finishedPlacingShips) return;\n    // Get the clicked cell and get its coordinates\n    const curCell = event.target;\n    const [x, y] = getCellCoords(curCell);\n    // Place the ship in the clicked cell\n    const isShipPlaced = playerObj.placeShip(x, y) \n    if (isShipPlaced) {\n      renderBanner(`${curPlayer}'s turn to place ships`);\n      // Render current player board and rerender ships on the side\n      if (playerObj === firstPlayer) {\n        renderFirstBoard(firstPlayer);\n        renderSideShipsFirst(firstPlayer.getIsShipPlacedArr());\n      }\n      else {\n        renderSecondBoard(secondPlayer);\n        renderSideShipsSecond(secondPlayer.getIsShipPlacedArr());\n      }\n    }\n    else {\n      // Display ship placement error \n      renderBanner(\"Invalid Placement! Try Again\");\n    }\n    // If all ships are placed start the game\n    if (playerObj.isAllShipsPlaced()) {\n      if (playerObj === firstPlayer) {\n        placeSecondPlayerShips();\n      }\n      else {\n        continueGameAfterShipsPlacement();\n      } \n    }\n  };\n}\n\n// ## Handle change axis and randomize buttons functions\nfunction handleChangeAxis(playerObj) {\n  return () => {\n    playerObj.changeShipAxis();\n    if (playerObj === firstPlayer) {\n      changeSideShipsAxisFirst();\n    }\n    else {\n      changeSideShipsAxisSecond();\n    }\n  }\n}\nfunction handleRandomize(playerObj) {\n  return () => {\n    playerObj.randomizeShips();\n    if (playerObj === firstPlayer) {\n      renderSideShipsFirst(firstPlayer.getIsShipPlacedArr());\n      placeSecondPlayerShips();\n    }\n    else {\n      renderSideShipsSecond(secondPlayer.getIsShipPlacedArr());\n      continueGameAfterShipsPlacement();\n    } \n  };\n}\n// # Computer functions\nfunction placeComputerShips() {\n  // Place ships randomly and render side ships\n  secondPlayer.randomizeShips();\n  renderSideShipsSecond(secondPlayer.getIsShipPlacedArr());\n  // Move to next step\n  continueGameAfterShipsPlacement();\n}\nfunction computerAttack() {\n  // If last attack was a hit, attack neighbor cells\n  let x = null;\n  let y = null;\n  // If there are coordinates in hitCellNeighborCoordsQueue use them\n  const hitNeighborCoords = getHitCellNeighborCoords();\n  if (hitNeighborCoords !== null) {\n    [x, y] = hitNeighborCoords;\n  }\n  else { // Else get random coordinates\n    [x, y] = getRandomCoords();\n  }\n  // Attack first player\n  const isHit = firstPlayer.receiveAttack(x, y);\n  // Render first player board after being attacked\n  renderFirstBoard(firstPlayer);\n  if (isHit) { // Hit case\n    // Check if game ended\n    if (firstPlayer.isLoser()) {\n      // Call End game function \n      endGame(secondPlayer.name);\n      return;\n    }\n    updateHitCellNeighborCoordsQueue(x, y);\n    // Make computer attack again\n    switchPlayerTurn(secondPlayer.name);\n  }\n  else { // miss case\n    // Switch to first player\n    switchPlayerTurn(firstPlayer.name);\n  }\n}\n\n// # Handle play again button function\nfunction handlePlayAgainClick(event) {\n  // remove event listener for play again button\n  removeEventListenerPlayAgainBtn(handlePlayAgainClick);\n  // start the game again\n  startNewGame();\n}\n\n// Initial render for creating board cells and ships on the side\ninitialRender();\n// Start the game\nstartNewGame();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///13\n\n}")},56:(module,__unused_webpack_exports,__webpack_require__)=>{eval('{\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute("nonce", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTYuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBLGNBQWMsS0FBd0MsR0FBRyxzQkFBaUIsR0FBRyxDQUFJO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanM/ZGRjZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///56\n\n}')},72:module=>{eval('{\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = "".concat(id, " ").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzIuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHdCQUF3QjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixpQkFBaUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw0QkFBNEI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiw2QkFBNkI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanM/MmRiYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gdXBkYXRlcjtcbn1cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///72\n\n}')},113:module=>{eval("{\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanM/MWRkZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///113\n\n}")},314:module=>{eval('{\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = "";\n      var needLayer = typeof item[5] !== "undefined";\n      if (item[4]) {\n        content += "@supports (".concat(item[4], ") {");\n      }\n      if (item[2]) {\n        content += "@media ".concat(item[2], " {");\n      }\n      if (needLayer) {\n        content += "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += "}";\n      }\n      if (item[2]) {\n        content += "}";\n      }\n      if (item[4]) {\n        content += "}";\n      }\n      return content;\n    }).join("");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === "string") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== "undefined") {\n        if (typeof item[5] === "undefined") {\n          item[5] = layer;\n        } else {\n          item[1] = "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {").concat(item[1], "}");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = "@media ".concat(item[2], " {").concat(item[1], "}");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = "".concat(supports);\n        } else {\n          item[1] = "@supports (".concat(item[4], ") {").concat(item[1], "}");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzE0LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxREFBcUQ7QUFDckQ7QUFDQTtBQUNBLGdEQUFnRDtBQUNoRDtBQUNBO0FBQ0EscUZBQXFGO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixpQkFBaUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHFCQUFxQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixzRkFBc0YscUJBQXFCO0FBQzNHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixpREFBaUQscUJBQXFCO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixzREFBc0QscUJBQXFCO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzPzI0ZmIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107XG5cbiAgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07XG5cbiAgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBsaXN0O1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///314\n\n}')},354:module=>{eval('{\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === "function") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);\n    var sourceMapping = "/*# ".concat(data, " */");\n    return [content].concat([sourceMapping]).join("\\n");\n  }\n  return [content].join("\\n");\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzU0LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsY0FBYztBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanM/YWYxMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///354\n\n}')},365:(module,__webpack_exports__,__webpack_require__)=>{eval('{/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(354);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(314);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/*\n  Josh\'s Custom CSS Reset\n  https://www.joshwcomeau.com/css/custom-css-reset/\n*/\n\n/* 1. Use a more-intuitive box-sizing model */\n*, *::before, *::after {\n  box-sizing: border-box;\n}\n\n/* 2. Remove default margin */\n* {\n  margin: 0;\n}\n\n/* 3. Enable keyword animations */\n@media (prefers-reduced-motion: no-preference) {\n  html {\n    interpolate-size: allow-keywords;\n  }\n}\n\nbody {\n  /* 4. Add accessible line-height */\n  line-height: 1.5;\n  /* 5. Improve text rendering */\n  -webkit-font-smoothing: antialiased;\n}\n\n/* 6. Improve media defaults */\nimg, picture, video, canvas, svg {\n  display: block;\n  max-width: 100%;\n}\n\n/* 7. Inherit fonts for form controls */\ninput, button, textarea, select {\n  font: inherit;\n}\n\n/* 8. Avoid text overflows */\np, h1, h2, h3, h4, h5, h6 {\n  overflow-wrap: break-word;\n}\n\n/* 9. Improve line wrapping */\np {\n  text-wrap: pretty;\n}\nh1, h2, h3, h4, h5, h6 {\n  text-wrap: balance;\n}\n\n/*\n  10. Create a root stacking context\n*/\n#root, #__next {\n  isolation: isolate;\n}\n\n/************************************************************/\n/* Custom Variables */\n/************************************************************/\n\n:root {\n  /* Colors - Base */\n  --color-bg: #EEF3F9;\n  --color-surface: #FFFFFF;\n  --color-text: #111827;\n  --color-text-muted: #717182;\n  \n  /* Colors - Inputs */\n  --color-input-bg: #F3F4F6;\n  --color-input-border: #E5E7EB;\n  --color-input-border-focus: #C8CDD4;\n  \n  /* Colors - Blue (Player 1) */\n  --color-blue-700: #1E40AF;\n  --color-blue-600: #2563EB;\n  --color-blue-500: #388AF6;\n  --color-blue-400: #3B82F6;\n  \n  /* Colors - Emerald (Player 2) */\n  --color-emerald-700: #047857;\n  --color-emerald-600: #149E78;\n  --color-emerald-500: #27B887;\n  --color-emerald-400: #22AB7D;\n  --color-emerald-300: #31D49E;\n  \n  /* Colors - Board */\n  --color-board-bg: #1E293B;\n  --color-board-grid: #2D4A6D;\n  --color-board-cell: #1E3A5F;\n  \n  /* Colors - States */\n  --color-hit: #DC2626;\n  --color-miss: #64748B;\n  --color-ship-inactive: #334155;\n  --color-ship-inactive-cell: #475569;\n  \n  /* Typography */\n  --font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";\n  --font-bold: 500;\n  \n  /* Border Radius */\n  --radius-sm: 0.2rem;\n  --radius-md: 0.6rem;\n  \n  /* Spacing */\n  --space-form-gap: 1.2rem;\n  --space-section: 3rem;\n  \n  /* Shadows */\n  --shadow-card: 0 12px 24px rgba(15, 23, 42, 0.08),\n                 0 2px 6px rgba(15, 23, 42, 0.06);\n  \n  /* Gradients */\n  --gradient-primary: linear-gradient(90deg, var(--color-blue-600) 0%, var(--color-emerald-400) 100%);\n  --gradient-primary-hover: linear-gradient(90deg, var(--color-blue-400) 0%, var(--color-emerald-300) 100%);\n}\n\n/************************************************************/\n/* General Styles */\n/************************************************************/\n\nbody {\n  text-align: center;\n  font-family: var(--font-family);\n  background-color: var(--color-bg);\n}\n\n.hidden-elem {\n  display: none !important;\n}\n\nh1 {\n  font-size: 3.5rem;\n  font-weight: var(--font-bold);\n  letter-spacing: 0.3rem;\n  margin: var(--space-section);\n  margin-top: 2rem;\n}\n\nbutton {\n  cursor: pointer;\n}\n\n.banner {\n  font-size: 1.5rem;\n  color: var(--color-text-muted);\n}\n\n/************************************************************/\n/* Game Mode Screen */\n/************************************************************/\n\n.game-mode-screen {\n  margin-top: var(--space-section);\n  display: flex;\n  gap: 2rem;\n  justify-content: center;\n}\n\n.game-mode-btn {\n  color: var(--color-surface);\n  border: none;\n  border-radius: var(--radius-md);\n  padding: 2rem 4rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1rem;\n}\n\n.game-mode-btn svg { \n  fill: none; \n  stroke: currentColor; \n  width: 5rem; \n  height: auto; \n}\n\n.game-mode-btn-text {\n  font-size: 1.2rem;\n  font-weight: var(--font-bold);\n}\n\n.computer-mode-btn {\n  background-color: var(--color-blue-600);\n}\n\n.computer-mode-btn:hover {\n  background-color: var(--color-blue-500);\n}\n\n.players-mode-btn {\n  background-color: var(--color-emerald-600);\n}\n\n.players-mode-btn:hover {\n  background-color: var(--color-emerald-500);\n}\n\n/************************************************************/\n/* Player Names Form Screen */\n/************************************************************/\n\n.player-names-form {\n  background-color: var(--color-surface);\n  width: fit-content;\n  margin: 0 auto;\n  margin-top: 6rem;\n  padding: 2rem;\n  box-shadow: var(--shadow-card);\n  border-radius: var(--radius-md);\n  border: 2px solid var(--color-input-border);\n  display: flex;\n  flex-direction: column;\n  gap: var(--space-form-gap);\n}\n\n.form-input-container {\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n}\n\n.player-names-form label {\n  display: block;\n  font-size: 0.95rem;\n  font-weight: var(--font-bold);\n}\n\n.player-names-form input {\n  font-size: 0.95rem;\n  background-color: var(--color-input-bg);\n  width: 100%;\n  padding: 0.4rem 0.6rem;\n  border-radius: var(--radius-md);\n  border: 2px solid var(--color-input-border);\n  outline: none;\n}\n\n.player-names-form input:focus {\n  border-color: var(--color-input-border-focus);\n}\n\n/* Start Game & Play Again buttons */\n.player-names-form button,\n.play-again-btn {\n  font-size: 1.1rem;\n  font-weight: 700;\n  color: var(--color-surface);\n  background-image: var(--gradient-primary);\n  padding: 0.5rem 5rem;\n  margin-top: var(--space-form-gap);\n  border: none;\n  border-radius: var(--radius-md);\n}\n\n.player-names-form button:hover,\n.play-again-btn:hover {\n  background-image: var(--gradient-primary-hover);\n}\n\n.play-again-btn {\n  padding: 0.5rem 2rem;\n  margin: 0 auto;\n  margin-top: 2rem;\n}\n\n/************************************************************/\n/* Game Screen */\n/************************************************************/\n\n.game-screen {\n  margin-top: 2rem;\n  min-height: 75vh;\n  display: flex;\n  flex-direction: column;\n}\n\n.boards-fleets-container {\n  display: flex;\n  justify-content: center;\n  gap: var(--space-section);\n}\n\n.board-container {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n/* Board titles */\n.board-title {\n  font-size: 1.1rem;\n  font-weight: var(--font-bold);\n}\n\n.first-board-title {\n  color: var(--color-blue-600);\n}\n\n.second-board-title {\n  color: var(--color-emerald-600);\n}\n\n/* Game board */\n.board {\n  display: grid;\n  grid-template-columns: repeat(10, 2rem);\n  width: fit-content;\n  background-color: var(--color-board-bg);\n  border-radius: var(--radius-md);\n  padding: 1.5rem;\n}\n\n/* Ship placement buttons */\n.first-ship-placement-btns,\n.second-ship-placement-btns {\n  display: flex;\n  gap: 1rem;\n  justify-content: center;\n}\n\n.ship-placement-btn {\n  border: none;\n  border-radius: var(--radius-md);\n  color: var(--color-surface);\n  padding: 0.5rem 1rem;\n  font-weight: var(--font-bold);\n}\n\n.first-ship-placement-btns button {\n  background-color: var(--color-blue-600);\n}\n\n.first-ship-placement-btns button:hover {\n  background-color: var(--color-blue-500);\n}\n\n.second-ship-placement-btns button {\n  background-color: var(--color-emerald-600);\n}\n\n.second-ship-placement-btns button:hover {\n  background-color: var(--color-emerald-500);\n}\n\n/************************************************************/\n/* Board Cell Styles */\n/************************************************************/\n\n.cell {\n  height: 2rem;\n  width: 2rem;\n  border: 1px solid var(--color-board-grid);\n}\n\n.cell:hover,\n.cell.empty:hover,\n.cell.hidden-cell:hover {\n  background-color: var(--color-emerald-600);\n}\n\n.cell.ship {\n  background-color: var(--color-blue-600);\n}\n\n.empty,\n.cell.hidden-cell {\n  background-color: var(--color-board-bg);\n}\n\n.cell.hit,\n.cell.hidden-cell.hit {\n  background-color: var(--color-hit);\n}\n\n.cell.miss,\n.cell.hidden-cell.miss {\n  background-color: var(--color-miss);\n}\n\n/************************************************************/\n/* Fleet */\n/************************************************************/\n\n.fleet-panel {\n  background-color: var(--color-board-bg);\n  border-radius: var(--radius-md);\n  color: var(--color-surface);\n  padding: 1rem;\n}\n\n.fleet-title {\n  font-size: 0.95rem;\n  font-weight: var(--font-bold);\n  margin-bottom: 1rem;\n}\n\n.side-ships-container {\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n\n/* Ship card */\n.ship-box {\n  border-radius: var(--radius-sm);\n  padding: 0.75rem;\n}\n\n.ship-info {\n  display: flex;\n  justify-content: space-between;\n  gap: 2rem;\n  margin-bottom: 0.5rem;\n}\n\n.ship-title {\n  font-size: 0.9rem;\n  font-weight: var(--font-bold);\n}\n\n.ship-size {\n  font-size: 0.75rem;\n}\n\n.ship-elem {\n  display: flex;\n  gap: 0.3rem;\n  width: fit-content;\n  height: fit-content;\n}\n\n.side-ship-cell {\n  height: 1rem;\n  width: 1rem;\n  border-radius: var(--radius-sm);\n}\n\n.ship-direction {\n  font-size: 2rem;\n  height: 2.5rem;\n}\n\n/* First board fleet */\n.first-fleet .ship-box {\n  border: 2px solid var(--color-blue-600);\n  background-color: var(--color-blue-700);\n}\n\n.first-fleet .side-ship-cell {\n  background-color: var(--color-blue-600);\n}\n\n/* Second board fleet */\n.second-fleet .ship-box {\n  border: 2px solid var(--color-emerald-600);\n  background-color: var(--color-emerald-700);\n}\n\n.second-fleet .side-ship-cell {\n  background-color: var(--color-emerald-600);\n}\n\n/* Placed ship state */\n.ship-box.placed {\n  background-color: var(--color-ship-inactive);\n  border: 2px solid transparent;\n}\n\n.placed .ship-title {\n  color: var(--color-miss);\n}\n\n.placed .ship-size {\n  color: var(--color-miss);\n}\n\n.placed .side-ship-cell {\n  background-color: var(--color-ship-inactive-cell);\n}\n\n/************************************************************/\n/* Footer */\n/************************************************************/\n\nfooter {\n  font-size: 0.95rem;\n  color: var(--color-text-muted);\n  margin: auto auto 1rem auto;\n}\n\nfooter a {\n  color: var(--color-blue-600);\n  text-decoration: none;\n}\n\nfooter a:hover {\n  color: var(--color-blue-500);\n  text-decoration: underline;\n}`, "",{"version":3,"sources":["webpack://./src/styles.css"],"names":[],"mappings":"AAAA;;;CAGC;;AAED,6CAA6C;AAC7C;EACE,sBAAsB;AACxB;;AAEA,6BAA6B;AAC7B;EACE,SAAS;AACX;;AAEA,iCAAiC;AACjC;EACE;IACE,gCAAgC;EAClC;AACF;;AAEA;EACE,kCAAkC;EAClC,gBAAgB;EAChB,8BAA8B;EAC9B,mCAAmC;AACrC;;AAEA,8BAA8B;AAC9B;EACE,cAAc;EACd,eAAe;AACjB;;AAEA,uCAAuC;AACvC;EACE,aAAa;AACf;;AAEA,4BAA4B;AAC5B;EACE,yBAAyB;AAC3B;;AAEA,6BAA6B;AAC7B;EACE,iBAAiB;AACnB;AACA;EACE,kBAAkB;AACpB;;AAEA;;CAEC;AACD;EACE,kBAAkB;AACpB;;AAEA,6DAA6D;AAC7D,qBAAqB;AACrB,6DAA6D;;AAE7D;EACE,kBAAkB;EAClB,mBAAmB;EACnB,wBAAwB;EACxB,qBAAqB;EACrB,2BAA2B;;EAE3B,oBAAoB;EACpB,yBAAyB;EACzB,6BAA6B;EAC7B,mCAAmC;;EAEnC,6BAA6B;EAC7B,yBAAyB;EACzB,yBAAyB;EACzB,yBAAyB;EACzB,yBAAyB;;EAEzB,gCAAgC;EAChC,4BAA4B;EAC5B,4BAA4B;EAC5B,4BAA4B;EAC5B,4BAA4B;EAC5B,4BAA4B;;EAE5B,mBAAmB;EACnB,yBAAyB;EACzB,2BAA2B;EAC3B,2BAA2B;;EAE3B,oBAAoB;EACpB,oBAAoB;EACpB,qBAAqB;EACrB,8BAA8B;EAC9B,mCAAmC;;EAEnC,eAAe;EACf,iIAAiI;EACjI,gBAAgB;;EAEhB,kBAAkB;EAClB,mBAAmB;EACnB,mBAAmB;;EAEnB,YAAY;EACZ,wBAAwB;EACxB,qBAAqB;;EAErB,YAAY;EACZ;iDAC+C;;EAE/C,cAAc;EACd,mGAAmG;EACnG,yGAAyG;AAC3G;;AAEA,6DAA6D;AAC7D,mBAAmB;AACnB,6DAA6D;;AAE7D;EACE,kBAAkB;EAClB,+BAA+B;EAC/B,iCAAiC;AACnC;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,iBAAiB;EACjB,6BAA6B;EAC7B,sBAAsB;EACtB,4BAA4B;EAC5B,gBAAgB;AAClB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,iBAAiB;EACjB,8BAA8B;AAChC;;AAEA,6DAA6D;AAC7D,qBAAqB;AACrB,6DAA6D;;AAE7D;EACE,gCAAgC;EAChC,aAAa;EACb,SAAS;EACT,uBAAuB;AACzB;;AAEA;EACE,2BAA2B;EAC3B,YAAY;EACZ,+BAA+B;EAC/B,kBAAkB;EAClB,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,SAAS;AACX;;AAEA;EACE,UAAU;EACV,oBAAoB;EACpB,WAAW;EACX,YAAY;AACd;;AAEA;EACE,iBAAiB;EACjB,6BAA6B;AAC/B;;AAEA;EACE,uCAAuC;AACzC;;AAEA;EACE,uCAAuC;AACzC;;AAEA;EACE,0CAA0C;AAC5C;;AAEA;EACE,0CAA0C;AAC5C;;AAEA,6DAA6D;AAC7D,6BAA6B;AAC7B,6DAA6D;;AAE7D;EACE,sCAAsC;EACtC,kBAAkB;EAClB,cAAc;EACd,gBAAgB;EAChB,aAAa;EACb,8BAA8B;EAC9B,+BAA+B;EAC/B,2CAA2C;EAC3C,aAAa;EACb,sBAAsB;EACtB,0BAA0B;AAC5B;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,kBAAkB;AACpB;;AAEA;EACE,cAAc;EACd,kBAAkB;EAClB,6BAA6B;AAC/B;;AAEA;EACE,kBAAkB;EAClB,uCAAuC;EACvC,WAAW;EACX,sBAAsB;EACtB,+BAA+B;EAC/B,2CAA2C;EAC3C,aAAa;AACf;;AAEA;EACE,6CAA6C;AAC/C;;AAEA,oCAAoC;AACpC;;EAEE,iBAAiB;EACjB,gBAAgB;EAChB,2BAA2B;EAC3B,yCAAyC;EACzC,oBAAoB;EACpB,iCAAiC;EACjC,YAAY;EACZ,+BAA+B;AACjC;;AAEA;;EAEE,+CAA+C;AACjD;;AAEA;EACE,oBAAoB;EACpB,cAAc;EACd,gBAAgB;AAClB;;AAEA,6DAA6D;AAC7D,gBAAgB;AAChB,6DAA6D;;AAE7D;EACE,gBAAgB;EAChB,gBAAgB;EAChB,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,yBAAyB;AAC3B;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,SAAS;AACX;;AAEA,iBAAiB;AACjB;EACE,iBAAiB;EACjB,6BAA6B;AAC/B;;AAEA;EACE,4BAA4B;AAC9B;;AAEA;EACE,+BAA+B;AACjC;;AAEA,eAAe;AACf;EACE,aAAa;EACb,uCAAuC;EACvC,kBAAkB;EAClB,uCAAuC;EACvC,+BAA+B;EAC/B,eAAe;AACjB;;AAEA,2BAA2B;AAC3B;;EAEE,aAAa;EACb,SAAS;EACT,uBAAuB;AACzB;;AAEA;EACE,YAAY;EACZ,+BAA+B;EAC/B,2BAA2B;EAC3B,oBAAoB;EACpB,6BAA6B;AAC/B;;AAEA;EACE,uCAAuC;AACzC;;AAEA;EACE,uCAAuC;AACzC;;AAEA;EACE,0CAA0C;AAC5C;;AAEA;EACE,0CAA0C;AAC5C;;AAEA,6DAA6D;AAC7D,sBAAsB;AACtB,6DAA6D;;AAE7D;EACE,YAAY;EACZ,WAAW;EACX,yCAAyC;AAC3C;;AAEA;;;EAGE,0CAA0C;AAC5C;;AAEA;EACE,uCAAuC;AACzC;;AAEA;;EAEE,uCAAuC;AACzC;;AAEA;;EAEE,kCAAkC;AACpC;;AAEA;;EAEE,mCAAmC;AACrC;;AAEA,6DAA6D;AAC7D,UAAU;AACV,6DAA6D;;AAE7D;EACE,uCAAuC;EACvC,+BAA+B;EAC/B,2BAA2B;EAC3B,aAAa;AACf;;AAEA;EACE,kBAAkB;EAClB,6BAA6B;EAC7B,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,WAAW;AACb;;AAEA,cAAc;AACd;EACE,+BAA+B;EAC/B,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,SAAS;EACT,qBAAqB;AACvB;;AAEA;EACE,iBAAiB;EACjB,6BAA6B;AAC/B;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,WAAW;EACX,kBAAkB;EAClB,mBAAmB;AACrB;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,+BAA+B;AACjC;;AAEA;EACE,eAAe;EACf,cAAc;AAChB;;AAEA,sBAAsB;AACtB;EACE,uCAAuC;EACvC,uCAAuC;AACzC;;AAEA;EACE,uCAAuC;AACzC;;AAEA,uBAAuB;AACvB;EACE,0CAA0C;EAC1C,0CAA0C;AAC5C;;AAEA;EACE,0CAA0C;AAC5C;;AAEA,sBAAsB;AACtB;EACE,4CAA4C;EAC5C,6BAA6B;AAC/B;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,iDAAiD;AACnD;;AAEA,6DAA6D;AAC7D,WAAW;AACX,6DAA6D;;AAE7D;EACE,kBAAkB;EAClB,8BAA8B;EAC9B,2BAA2B;AAC7B;;AAEA;EACE,4BAA4B;EAC5B,qBAAqB;AACvB;;AAEA;EACE,4BAA4B;EAC5B,0BAA0B;AAC5B","sourcesContent":["/*\\n  Josh\'s Custom CSS Reset\\n  https://www.joshwcomeau.com/css/custom-css-reset/\\n*/\\n\\n/* 1. Use a more-intuitive box-sizing model */\\n*, *::before, *::after {\\n  box-sizing: border-box;\\n}\\n\\n/* 2. Remove default margin */\\n* {\\n  margin: 0;\\n}\\n\\n/* 3. Enable keyword animations */\\n@media (prefers-reduced-motion: no-preference) {\\n  html {\\n    interpolate-size: allow-keywords;\\n  }\\n}\\n\\nbody {\\n  /* 4. Add accessible line-height */\\n  line-height: 1.5;\\n  /* 5. Improve text rendering */\\n  -webkit-font-smoothing: antialiased;\\n}\\n\\n/* 6. Improve media defaults */\\nimg, picture, video, canvas, svg {\\n  display: block;\\n  max-width: 100%;\\n}\\n\\n/* 7. Inherit fonts for form controls */\\ninput, button, textarea, select {\\n  font: inherit;\\n}\\n\\n/* 8. Avoid text overflows */\\np, h1, h2, h3, h4, h5, h6 {\\n  overflow-wrap: break-word;\\n}\\n\\n/* 9. Improve line wrapping */\\np {\\n  text-wrap: pretty;\\n}\\nh1, h2, h3, h4, h5, h6 {\\n  text-wrap: balance;\\n}\\n\\n/*\\n  10. Create a root stacking context\\n*/\\n#root, #__next {\\n  isolation: isolate;\\n}\\n\\n/************************************************************/\\n/* Custom Variables */\\n/************************************************************/\\n\\n:root {\\n  /* Colors - Base */\\n  --color-bg: #EEF3F9;\\n  --color-surface: #FFFFFF;\\n  --color-text: #111827;\\n  --color-text-muted: #717182;\\n  \\n  /* Colors - Inputs */\\n  --color-input-bg: #F3F4F6;\\n  --color-input-border: #E5E7EB;\\n  --color-input-border-focus: #C8CDD4;\\n  \\n  /* Colors - Blue (Player 1) */\\n  --color-blue-700: #1E40AF;\\n  --color-blue-600: #2563EB;\\n  --color-blue-500: #388AF6;\\n  --color-blue-400: #3B82F6;\\n  \\n  /* Colors - Emerald (Player 2) */\\n  --color-emerald-700: #047857;\\n  --color-emerald-600: #149E78;\\n  --color-emerald-500: #27B887;\\n  --color-emerald-400: #22AB7D;\\n  --color-emerald-300: #31D49E;\\n  \\n  /* Colors - Board */\\n  --color-board-bg: #1E293B;\\n  --color-board-grid: #2D4A6D;\\n  --color-board-cell: #1E3A5F;\\n  \\n  /* Colors - States */\\n  --color-hit: #DC2626;\\n  --color-miss: #64748B;\\n  --color-ship-inactive: #334155;\\n  --color-ship-inactive-cell: #475569;\\n  \\n  /* Typography */\\n  --font-family: ui-sans-serif, system-ui, sans-serif, \\"Apple Color Emoji\\", \\"Segoe UI Emoji\\", \\"Segoe UI Symbol\\", \\"Noto Color Emoji\\";\\n  --font-bold: 500;\\n  \\n  /* Border Radius */\\n  --radius-sm: 0.2rem;\\n  --radius-md: 0.6rem;\\n  \\n  /* Spacing */\\n  --space-form-gap: 1.2rem;\\n  --space-section: 3rem;\\n  \\n  /* Shadows */\\n  --shadow-card: 0 12px 24px rgba(15, 23, 42, 0.08),\\n                 0 2px 6px rgba(15, 23, 42, 0.06);\\n  \\n  /* Gradients */\\n  --gradient-primary: linear-gradient(90deg, var(--color-blue-600) 0%, var(--color-emerald-400) 100%);\\n  --gradient-primary-hover: linear-gradient(90deg, var(--color-blue-400) 0%, var(--color-emerald-300) 100%);\\n}\\n\\n/************************************************************/\\n/* General Styles */\\n/************************************************************/\\n\\nbody {\\n  text-align: center;\\n  font-family: var(--font-family);\\n  background-color: var(--color-bg);\\n}\\n\\n.hidden-elem {\\n  display: none !important;\\n}\\n\\nh1 {\\n  font-size: 3.5rem;\\n  font-weight: var(--font-bold);\\n  letter-spacing: 0.3rem;\\n  margin: var(--space-section);\\n  margin-top: 2rem;\\n}\\n\\nbutton {\\n  cursor: pointer;\\n}\\n\\n.banner {\\n  font-size: 1.5rem;\\n  color: var(--color-text-muted);\\n}\\n\\n/************************************************************/\\n/* Game Mode Screen */\\n/************************************************************/\\n\\n.game-mode-screen {\\n  margin-top: var(--space-section);\\n  display: flex;\\n  gap: 2rem;\\n  justify-content: center;\\n}\\n\\n.game-mode-btn {\\n  color: var(--color-surface);\\n  border: none;\\n  border-radius: var(--radius-md);\\n  padding: 2rem 4rem;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  gap: 1rem;\\n}\\n\\n.game-mode-btn svg { \\n  fill: none; \\n  stroke: currentColor; \\n  width: 5rem; \\n  height: auto; \\n}\\n\\n.game-mode-btn-text {\\n  font-size: 1.2rem;\\n  font-weight: var(--font-bold);\\n}\\n\\n.computer-mode-btn {\\n  background-color: var(--color-blue-600);\\n}\\n\\n.computer-mode-btn:hover {\\n  background-color: var(--color-blue-500);\\n}\\n\\n.players-mode-btn {\\n  background-color: var(--color-emerald-600);\\n}\\n\\n.players-mode-btn:hover {\\n  background-color: var(--color-emerald-500);\\n}\\n\\n/************************************************************/\\n/* Player Names Form Screen */\\n/************************************************************/\\n\\n.player-names-form {\\n  background-color: var(--color-surface);\\n  width: fit-content;\\n  margin: 0 auto;\\n  margin-top: 6rem;\\n  padding: 2rem;\\n  box-shadow: var(--shadow-card);\\n  border-radius: var(--radius-md);\\n  border: 2px solid var(--color-input-border);\\n  display: flex;\\n  flex-direction: column;\\n  gap: var(--space-form-gap);\\n}\\n\\n.form-input-container {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: start;\\n}\\n\\n.player-names-form label {\\n  display: block;\\n  font-size: 0.95rem;\\n  font-weight: var(--font-bold);\\n}\\n\\n.player-names-form input {\\n  font-size: 0.95rem;\\n  background-color: var(--color-input-bg);\\n  width: 100%;\\n  padding: 0.4rem 0.6rem;\\n  border-radius: var(--radius-md);\\n  border: 2px solid var(--color-input-border);\\n  outline: none;\\n}\\n\\n.player-names-form input:focus {\\n  border-color: var(--color-input-border-focus);\\n}\\n\\n/* Start Game & Play Again buttons */\\n.player-names-form button,\\n.play-again-btn {\\n  font-size: 1.1rem;\\n  font-weight: 700;\\n  color: var(--color-surface);\\n  background-image: var(--gradient-primary);\\n  padding: 0.5rem 5rem;\\n  margin-top: var(--space-form-gap);\\n  border: none;\\n  border-radius: var(--radius-md);\\n}\\n\\n.player-names-form button:hover,\\n.play-again-btn:hover {\\n  background-image: var(--gradient-primary-hover);\\n}\\n\\n.play-again-btn {\\n  padding: 0.5rem 2rem;\\n  margin: 0 auto;\\n  margin-top: 2rem;\\n}\\n\\n/************************************************************/\\n/* Game Screen */\\n/************************************************************/\\n\\n.game-screen {\\n  margin-top: 2rem;\\n  min-height: 75vh;\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.boards-fleets-container {\\n  display: flex;\\n  justify-content: center;\\n  gap: var(--space-section);\\n}\\n\\n.board-container {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 1rem;\\n}\\n\\n/* Board titles */\\n.board-title {\\n  font-size: 1.1rem;\\n  font-weight: var(--font-bold);\\n}\\n\\n.first-board-title {\\n  color: var(--color-blue-600);\\n}\\n\\n.second-board-title {\\n  color: var(--color-emerald-600);\\n}\\n\\n/* Game board */\\n.board {\\n  display: grid;\\n  grid-template-columns: repeat(10, 2rem);\\n  width: fit-content;\\n  background-color: var(--color-board-bg);\\n  border-radius: var(--radius-md);\\n  padding: 1.5rem;\\n}\\n\\n/* Ship placement buttons */\\n.first-ship-placement-btns,\\n.second-ship-placement-btns {\\n  display: flex;\\n  gap: 1rem;\\n  justify-content: center;\\n}\\n\\n.ship-placement-btn {\\n  border: none;\\n  border-radius: var(--radius-md);\\n  color: var(--color-surface);\\n  padding: 0.5rem 1rem;\\n  font-weight: var(--font-bold);\\n}\\n\\n.first-ship-placement-btns button {\\n  background-color: var(--color-blue-600);\\n}\\n\\n.first-ship-placement-btns button:hover {\\n  background-color: var(--color-blue-500);\\n}\\n\\n.second-ship-placement-btns button {\\n  background-color: var(--color-emerald-600);\\n}\\n\\n.second-ship-placement-btns button:hover {\\n  background-color: var(--color-emerald-500);\\n}\\n\\n/************************************************************/\\n/* Board Cell Styles */\\n/************************************************************/\\n\\n.cell {\\n  height: 2rem;\\n  width: 2rem;\\n  border: 1px solid var(--color-board-grid);\\n}\\n\\n.cell:hover,\\n.cell.empty:hover,\\n.cell.hidden-cell:hover {\\n  background-color: var(--color-emerald-600);\\n}\\n\\n.cell.ship {\\n  background-color: var(--color-blue-600);\\n}\\n\\n.empty,\\n.cell.hidden-cell {\\n  background-color: var(--color-board-bg);\\n}\\n\\n.cell.hit,\\n.cell.hidden-cell.hit {\\n  background-color: var(--color-hit);\\n}\\n\\n.cell.miss,\\n.cell.hidden-cell.miss {\\n  background-color: var(--color-miss);\\n}\\n\\n/************************************************************/\\n/* Fleet */\\n/************************************************************/\\n\\n.fleet-panel {\\n  background-color: var(--color-board-bg);\\n  border-radius: var(--radius-md);\\n  color: var(--color-surface);\\n  padding: 1rem;\\n}\\n\\n.fleet-title {\\n  font-size: 0.95rem;\\n  font-weight: var(--font-bold);\\n  margin-bottom: 1rem;\\n}\\n\\n.side-ships-container {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 0.5rem;\\n}\\n\\n/* Ship card */\\n.ship-box {\\n  border-radius: var(--radius-sm);\\n  padding: 0.75rem;\\n}\\n\\n.ship-info {\\n  display: flex;\\n  justify-content: space-between;\\n  gap: 2rem;\\n  margin-bottom: 0.5rem;\\n}\\n\\n.ship-title {\\n  font-size: 0.9rem;\\n  font-weight: var(--font-bold);\\n}\\n\\n.ship-size {\\n  font-size: 0.75rem;\\n}\\n\\n.ship-elem {\\n  display: flex;\\n  gap: 0.3rem;\\n  width: fit-content;\\n  height: fit-content;\\n}\\n\\n.side-ship-cell {\\n  height: 1rem;\\n  width: 1rem;\\n  border-radius: var(--radius-sm);\\n}\\n\\n.ship-direction {\\n  font-size: 2rem;\\n  height: 2.5rem;\\n}\\n\\n/* First board fleet */\\n.first-fleet .ship-box {\\n  border: 2px solid var(--color-blue-600);\\n  background-color: var(--color-blue-700);\\n}\\n\\n.first-fleet .side-ship-cell {\\n  background-color: var(--color-blue-600);\\n}\\n\\n/* Second board fleet */\\n.second-fleet .ship-box {\\n  border: 2px solid var(--color-emerald-600);\\n  background-color: var(--color-emerald-700);\\n}\\n\\n.second-fleet .side-ship-cell {\\n  background-color: var(--color-emerald-600);\\n}\\n\\n/* Placed ship state */\\n.ship-box.placed {\\n  background-color: var(--color-ship-inactive);\\n  border: 2px solid transparent;\\n}\\n\\n.placed .ship-title {\\n  color: var(--color-miss);\\n}\\n\\n.placed .ship-size {\\n  color: var(--color-miss);\\n}\\n\\n.placed .side-ship-cell {\\n  background-color: var(--color-ship-inactive-cell);\\n}\\n\\n/************************************************************/\\n/* Footer */\\n/************************************************************/\\n\\nfooter {\\n  font-size: 0.95rem;\\n  color: var(--color-text-muted);\\n  margin: auto auto 1rem auto;\\n}\\n\\nfooter a {\\n  color: var(--color-blue-600);\\n  text-decoration: none;\\n}\\n\\nfooter a:hover {\\n  color: var(--color-blue-500);\\n  text-decoration: underline;\\n}"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///365\n\n}')},540:module=>{eval('{\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement("style");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTQwLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanM/ZGU2YyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///540\n\n}')},659:module=>{eval('{\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === "undefined") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error("Couldn\'t find a style target. This probably means that the value for the \'insert\' parameter is invalid.");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjU5LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanM/YjIxNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///659\n\n}')},825:module=>{eval('{\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = "";\n  if (obj.supports) {\n    css += "@supports (".concat(obj.supports, ") {");\n  }\n  if (obj.media) {\n    css += "@media ".concat(obj.media, " {");\n  }\n  var needLayer = typeof obj.layer !== "undefined";\n  if (needLayer) {\n    css += "@layer".concat(obj.layer.length > 0 ? " ".concat(obj.layer) : "", " {");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += "}";\n  }\n  if (obj.media) {\n    css += "}";\n  }\n  if (obj.supports) {\n    css += "}";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== "undefined") {\n    css += "\\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === "undefined") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODI1LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0RBQWtEO0FBQ2xEO0FBQ0E7QUFDQSwwQ0FBMEM7QUFDMUM7QUFDQTtBQUNBO0FBQ0EsaUZBQWlGO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EseURBQXlEO0FBQ3pEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanM/ZTQ3OSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG4gIGNzcyArPSBvYmouY3NzO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9XG5cbiAgLy8gRm9yIG9sZCBJRVxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKCkge30sXG4gICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHt9XG4gICAgfTtcbiAgfVxuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///825\n\n}')}},__webpack_module_cache__={};function __webpack_require__(n){var B=__webpack_module_cache__[n];if(void 0!==B)return B.exports;var l=__webpack_module_cache__[n]={id:n,exports:{}};return __webpack_modules__[n](l,l.exports,__webpack_require__),l.exports}__webpack_require__.n=n=>{var B=n&&n.__esModule?()=>n.default:()=>n;return __webpack_require__.d(B,{a:B}),B},__webpack_require__.d=(n,B)=>{for(var l in B)__webpack_require__.o(B,l)&&!__webpack_require__.o(n,l)&&Object.defineProperty(n,l,{enumerable:!0,get:B[l]})},__webpack_require__.o=(n,B)=>Object.prototype.hasOwnProperty.call(n,B),__webpack_require__.nc=void 0;var __webpack_exports__=__webpack_require__(13)})();